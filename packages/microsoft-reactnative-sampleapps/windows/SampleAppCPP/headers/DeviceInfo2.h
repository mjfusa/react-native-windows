// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.200316.3

#ifndef WINRT_DeviceInfo2_H
#define WINRT_DeviceInfo2_H
#include "winrt/base.h"
static_assert(winrt::check_version(CPPWINRT_VERSION, "2.0.200316.3"), "Mismatched C++/WinRT headers.");
#include "winrt/impl/Microsoft.ReactNative.2.h"
#include "DeviceInfo2.2.h"
namespace winrt::impl
{
#ifndef WINRT_LEAN_AND_MEAN
    template <typename D>
    struct produce<D, DeviceInfo2::IReactPackageProvider> : produce_base<D, DeviceInfo2::IReactPackageProvider>
    {
    };
#endif
}
WINRT_EXPORT namespace winrt::DeviceInfo2
{
    inline ReactPackageProvider::ReactPackageProvider() :
        ReactPackageProvider(impl::call_factory_cast<ReactPackageProvider(*)(Windows::Foundation::IActivationFactory const&), ReactPackageProvider>([](Windows::Foundation::IActivationFactory const& f) { return f.template ActivateInstance<ReactPackageProvider>(); }))
    {
    }
}
namespace std
{
#ifndef WINRT_LEAN_AND_MEAN
    template<> struct hash<winrt::DeviceInfo2::IReactPackageProvider> : winrt::impl::hash_base {};
    template<> struct hash<winrt::DeviceInfo2::ReactPackageProvider> : winrt::impl::hash_base {};
#endif
}
#endif
